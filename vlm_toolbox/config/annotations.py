import os

from config.base import BaseConfig
from config.enums import DataStatus, ImageDatasets
from config.path import ANNOTATIONS_TEMPLATE_PATH


class AnnotationsConfig(BaseConfig):
    config = {
        ImageDatasets.IMAGENET_1K: {
            'annotations_path': os.path.join(ANNOTATIONS_TEMPLATE_PATH, "imagenet1k", "labels.csv"),
            'is_hierarchical': True,
            'identifier': 'class_id',
            'label_column_name': 'simplified',
            'default_prompt_template': 'a photo of a {}.',
            'context_initialization': 'it is an image of',
            'prompt_templates': [
                'a bad photo of a {}.',
                'a photo of many {}.',
                'a sculpture of a {}.',
                'a photo of the hard to see {}.',
                'a low resolution photo of the {}.',
                'a rendering of a {}.',
                'graffiti of a {}.',
                'a bad photo of the {}.',
                'a cropped photo of the {}.',
                'a tattoo of a {}.',
                'the embroidered {}.',
                'a photo of a hard to see {}.',
                'a bright photo of a {}.',
                'a photo of a clean {}.',
                'a photo of a dirty {}.',
                'a dark photo of the {}.',
                'a drawing of a {}.',
                'a photo of my {}.',
                'the plastic {}.',
                'a photo of the cool {}.',
                'a close-up photo of a {}.',
                'a black and white photo of the {}.',
                'a painting of the {}.',
                'a painting of a {}.',
                'a pixelated photo of the {}.',
                'a sculpture of the {}.',
                'a bright photo of the {}.',
                'a cropped photo of a {}.',
                'a plastic {}.',
                'a photo of the dirty {}.',
                'a jpeg corrupted photo of a {}.',
                'a blurry photo of the {}.',
                'a photo of the {}.',
                'a good photo of the {}.',
                'a rendering of the {}.',
                'a {} in a video game.',
                'a photo of one {}.',
                'a doodle of a {}.',
                'a close-up photo of the {}.',
                'a photo of a {}.',
                'the origami {}.',
                'the {} in a video game.',
                'a sketch of a {}.',
                'a doodle of the {}.',
                'a origami {}.',
                'a low resolution photo of a {}.',
                'the toy {}.',
                'a rendition of the {}.',
                'a photo of the clean {}.',
                'a photo of a large {}.',
                'a rendition of a {}.',
                'a photo of a nice {}.',
                'a photo of a weird {}.',
                'a blurry photo of a {}.',
                'a cartoon {}.',
                'art of a {}.',
                'a sketch of the {}.',
                'a embroidered {}.',
                'a pixelated photo of a {}.',
                'itap of the {}.',
                'a jpeg corrupted photo of the {}.',
                'a good photo of a {}.',
                'a plushie {}.',
                'a photo of the nice {}.',
                'a photo of the small {}.',
                'a photo of the weird {}.',
                'the cartoon {}.',
                'art of the {}.',
                'a drawing of the {}.',
                'a photo of the large {}.',
                'a black and white photo of a {}.',
                'the plushie {}.',
                'a dark photo of a {}.',
                'itap of a {}.',
                'graffiti of the {}.',
                'a toy {}.',
                'itap of my {}.',
                'a photo of a cool {}.',
                'a photo of a small {}.',
                'a tattoo of the {}.',
            ],
        },
        ImageDatasets.FOOD101: {
            'annotations_path': os.path.join(ANNOTATIONS_TEMPLATE_PATH, "food101", "labels.csv"),
            'is_hierarchical': True,
            'identifier': 'class_id',
            'label_column_name': 'label',
            'default_prompt_template': 'a photo of {}, a type of food.',
            'context_initialization': 'it is an image of',
            'prompt_templates': [
                'a photo of {}, a type of food.',
            ],
        },
        ImageDatasets.CIFAR100: {
            'annotations_path': os.path.join(ANNOTATIONS_TEMPLATE_PATH, "cifar100", "labels.csv"),
            'is_hierarchical': True,
            'identifier': 'class_id',
            'default_label_col': 'label',
            'default_prompt_template': 'a photo of a {}.',
            'context_initialization': 'it is an image of',
            'prompt_templates': [
                'a photo of a {}.',
                'a blurry photo of a {}.',
                'a black and white photo of a {}.',
                'a low contrast photo of a {}.',
                'a high contrast photo of a {}.',
                'a bad photo of a {}.',
                'a good photo of a {}.',
                'a photo of a small {}.',
                'a photo of a big {}.',
                'a photo of the {}.',
                'a blurry photo of the {}.',
                'a black and white photo of the {}.',
                'a low contrast photo of the {}.',
                'a high contrast photo of the {}.',
                'a bad photo of the {}.',
                'a good photo of the {}.',
                'a photo of the small {}.',
                'a photo of the big {}.',
            ],
        },
        ImageDatasets.CIFAR100: {
            'annotations_path': os.path.join(ANNOTATIONS_TEMPLATE_PATH, "stanford_cars", "labels.csv"),
            'is_hierarchical': True,
            'identifier': 'class_id',
            'label_column_name': 'label',
            'default_prompt_template': 'a photo of a {}.',
            'context_initialization': 'it is an image of',
            'prompt_templates': [
                'a photo of a {}.',
                'a photo of the {}.',
                'a photo of my {}.',
                'i love my {}!',
                'a photo of my dirty {}.',
                'a photo of my clean {}.',
                'a photo of my new {}.',
                'a photo of my old {}.',
            ],
        },
        # Add configs for ImageDatasets.MSCOCO_CAPTIONS
        ImageDatasets.MSCOCO_CAPTIONS: {
            'annotations_path': os.path.join(ANNOTATIONS_TEMPLATE_PATH, "mscoco_captions", "labels.csv"),
            'is_hierarchical': False,
            'identifier': 'imgid',
            'label_column_name': 'label',
            'default_prompt_template': 'a photo of a {}.',
            'context_initialization': 'it is an image of',
            'prompt_templates': [
                'a photo of a {}.',
                'a photo of the {}.',
                'a photo of my {}.',
                'i love my {}!',
                'a photo of my dirty {}.',
                'a photo of my clean {}.',
                'a photo of my new {}.',
                'a photo of my old {}.',
            ],
        },
        ImageDatasets.INATURALIST: {
            'annotations_path': os.path.join(ANNOTATIONS_TEMPLATE_PATH, "inaturalist2021", "labels.csv"),
            'is_hierarchical': True,
            'identifier': 'id',
            'label_column_name': 'name',
            'default_prompt_template': 'a photo of a {}.',
            'context_initialization': 'it is an image of',
            'prompt_templates': [
                "this is a close-up image of a {}.",
                "a natural habitat scene with a {}.",
                "a high-quality photograph showcasing a {}.",
                "this is an outdoor shot of a {}.",
                "captured in its natural environment, this is a {}.",
                "a detailed view of a {}, found in the wild.",
                "a snapshot featuring a {} in its habitat.",
                "this image beautifully illustrates a {}.",
                "an educational image presenting a {}.",
                "the focus of this image is a {} in nature.",
                "a naturalistic portrayal of a {}.",
                "this picture captures the essence of a {}.",
                "observing a {} in its natural surroundings.",
                "a well-lit photo of a {}.",
                "an image that clearly depicts a {}, native to its environment.",
                "in the wild, this is a {}.",
                "a photographic study of a {}.",
                "natureâ€™s beauty, encapsulated by a {}.",
                "a wildlife photo of a {}.",
                "spotlight on a {}, thriving in its ecosystem."
            ],
        },
    }

    @staticmethod
    def get_config(dataset_name, **kwargs):
        dataset_name = dataset_name.lower()
    
        if dataset_name not in AnnotationsConfig.config:
            raise ValueError(f"Dataset configuration for '{dataset_name}' not found.")
        
        dataset_config = AnnotationsConfig.config[dataset_name]
        dataset_config = {**dataset_config, **kwargs}
        annotations_path = dataset_config['annotations_path']
        if not os.path.exists(annotations_path):
            raise FileNotFoundError(f"The annotations file '{annotations_path}' does not exist.")
    
        label_column_name = dataset_config.get('label_column_name', dataset_config.get('default_label_col', 'label'))
    
        return {
            'dataset_name': dataset_name,
            'identifier': dataset_config['identifier'],
            'annotations_path': annotations_path,
            'label_column_name': label_column_name,
            'prompt_templates': dataset_config['prompt_templates'],
            'context_initialization': dataset_config['context_initialization'],
            'default_prompt_template': dataset_config['default_prompt_template'],
            'data_type': DataStatus.RAW,
        }        
